!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADC_BUF_SIZE	IIR_test.c	16;"	d	file:
AGAIN	FIR_test.c	16;"	d	file:
BGAIN	FIR_test.c	15;"	d	file:
FIR_bandpass_filter	print_relevant_plot.py	/^def FIR_bandpass_filter(data, lowcut, highcut):$/;"	f
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile(filename, **kwargs):$/;"	f
GAIN	FIR_test.c	100;"	d	file:
NA	IIR_test.c	14;"	d	file:
NB	IIR_test.c	13;"	d	file:
Samples	FIR_test.c	/^} Samples;$/;"	t	typeref:struct:__anon2	file:
Samples	IIR_test.c	/^} Samples;$/;"	t	typeref:struct:__anon1	file:
T	butterworth.py	/^    T = 0.05$/;"	v
T	chebyshev.py	/^    T = 0.05$/;"	v
WINDOW_SIZE	FIR_test.c	13;"	d	file:
a	FIR.py	/^a = signal.firwin(n, cutoff = 0.3, window = ('kaiser', 1.0))$/;"	v
a	butterworth.py	/^    a = 0.02$/;"	v
a	c_ints.c	/^double a[] =    {$/;"	v
a	chebyshev.py	/^    a = 0.02$/;"	v
a	elliptic.py	/^a = [0.1, 0.2, 0.3, 0.4]$/;"	v
alloc_size	IIR_test.c	/^    size_t alloc_size;$/;"	m	struct:__anon1	file:
array	FIR_test.c	/^  int *array;$/;"	m	struct:__anon2	file:
array	IIR_test.c	/^    int *array;$/;"	m	struct:__anon1	file:
b	FIR.py	/^b = - signal.firwin(n, cutoff = 0.5, window = ('kaiser', 1.0)); b[n\/2] = b[n\/2] + 1$/;"	v
b	c_ints.c	/^double b[] =    { $/;"	v
butter_bandpass	butterworth.py	/^def butter_bandpass(lowcut, highcut, fs, order=5):$/;"	f
butter_bandpass	chebyshev.py	/^def butter_bandpass(lowcut, highcut, fs, order=5):$/;"	f
butter_bandpass_filter	butterworth.py	/^def butter_bandpass_filter(data, lowcut, highcut, fs, order=5):$/;"	f
butter_bandpass_filter	chebyshev.py	/^def butter_bandpass_filter(data, lowcut, highcut, fs, order=5):$/;"	f
convolve	FIR_test.c	/^void convolve(int* input, Samples* data, int* output, int gain)$/;"	f
d	FIR.py	/^d = - (a+b); d[n\/2] = d[n\/2] + 1$/;"	v
data	plot_data.py	/^data = np.genfromtxt('test.txt', delimiter=', ', names=True, skiprows=0)$/;"	v
data_array	plot_data.py	/^data_array = [list(each) for each in data]$/;"	v
data_fft	plot_data.py	/^data_fft = fft(data_list)$/;"	v
data_list	plot_data.py	/^data_list = []$/;"	v
ellip_bandpass_filter	print_relevant_plot.py	/^def ellip_bandpass_filter(data):$/;"	f
elliptic_filter	IIR_test.c	/^void elliptic_filter(int16_t* x, int64_t* y)$/;"	f
f0	butterworth.py	/^    f0 = 600.0$/;"	v
f0	chebyshev.py	/^    f0 = 600.0$/;"	v
fft_of_filtered_sound	print_relevant_plot.py	/^    fft_of_filtered_sound = fft(filtered_snippet)$/;"	v
fft_of_sound	print_relevant_plot.py	/^    fft_of_sound = fft(sound_data_snippet)$/;"	v
filtered_array	plot_data.py	/^filtered_array = [list(each) for each in filtered_data]$/;"	v
filtered_data	plot_data.py	/^filtered_data = np.genfromtxt('IIR_filtered.txt', delimiter=' ', names=True, skiprows=0)$/;"	v
filtered_fft	plot_data.py	/^filtered_fft = fft(filtered_list)$/;"	v
filtered_list	plot_data.py	/^filtered_list = []$/;"	v
filtered_snippet	print_relevant_plot.py	/^    filtered_snippet = ellip_bandpass_filter(sound_data_snippet)$/;"	v
firfilt	print_relevant_plot.py	/^firfilt = initialize_FIR_BP_filter()$/;"	v
free_array	FIR_test.c	/^void free_array(Samples *a)$/;"	f
free_array	IIR_test.c	/^void free_array(Samples *a)$/;"	f
fs	butterworth.py	/^    fs = 5000.0$/;"	v
fs	chebyshev.py	/^    fs = 5000.0$/;"	v
highcut	butterworth.py	/^    highcut = 1250.0$/;"	v
highcut	chebyshev.py	/^    highcut = 1250.0$/;"	v
i	wave.py	/^    i = i+1600$/;"	v
i	wave.py	/^i = 0$/;"	v
impz	elliptic.py	/^def impz(b,a=1):$/;"	f
init_array	FIR_test.c	/^void init_array(Samples *a, size_t initialSize)$/;"	f
init_array	IIR_test.c	/^void init_array(Samples *a, size_t initialSize)$/;"	f
init_x	IIR_test.c	/^void init_x(int16_t* x)$/;"	f
initialize_FIR_BP_filter	print_relevant_plot.py	/^def initialize_FIR_BP_filter():$/;"	f
insert_array	FIR_test.c	/^void insert_array(Samples *a, int element)$/;"	f
insert_array	IIR_test.c	/^void insert_array(Samples *a, int element)$/;"	f
length	IIR_test.c	/^    size_t length;$/;"	m	struct:__anon1	file:
lowcut	butterworth.py	/^    lowcut = 500.0$/;"	v
lowcut	chebyshev.py	/^    lowcut = 500.0$/;"	v
main	FIR_test.c	/^int main()$/;"	f
main	IIR_test.c	/^int main(void)$/;"	f
main	c_ints.c	/^int main(void)$/;"	f
makegraph	print_relevant_plot.py	/^def makegraph(data, filename):$/;"	f
mfreqz	FIR.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	elliptic.py	/^def mfreqz(b,a=1):$/;"	f
n	FIR.py	/^n = 65$/;"	v
niter	real_time_plotting.py	/^niter = 254$/;"	v
nsamples	butterworth.py	/^    nsamples = T * fs$/;"	v
nsamples	chebyshev.py	/^    nsamples = T * fs$/;"	v
num_samples	plot_data.py	/^num_samples = len(data_list)$/;"	v
num_samples	print_relevant_plot.py	/^num_samples = snippet_length$/;"	v
num_samples	wave.py	/^num_samples = snippet_length$/;"	v
nyquist_freq	plot_data.py	/^nyquist_freq = sample_freq\/2$/;"	v
nyquist_freq	print_relevant_plot.py	/^nyquist_freq = sample_freq \/ 2$/;"	v
nyquist_freq	wave.py	/^nyquist_freq = sample_freq \/ 2$/;"	v
points	real_time_plotting.py	/^points = ax.plot(x, y, 'o')[0]$/;"	v
randomwalk	animation.py	/^def randomwalk(dims=(256, 256), n=20, sigma=5, alpha=0.95, seed=1):$/;"	f
robs_lfilter	butterworth.py	/^def robs_lfilter(b, a, x):$/;"	f
robs_lfilter	print_relevant_plot.py	/^def robs_lfilter(b, a, x):$/;"	f
rohan_times_of_interest	print_relevant_plot.py	/^rohan_times_of_interest = [5.790]$/;"	v
run	animation.py	/^def run(niter=1000, doblit=True):$/;"	f
sample_freq	plot_data.py	/^sample_freq = 8000$/;"	v
sample_freq	print_relevant_plot.py	/^sample_freq = 8000$/;"	v
sample_freq	wave.py	/^sample_freq = 44100$/;"	v
samples_of_interest	print_relevant_plot.py	/^samples_of_interest = [(int) (x*sample_freq - snippet_length\/2) for x in times_of_interest]$/;"	v
size	FIR_test.c	/^  size_t size;$/;"	m	struct:__anon2	file:
snippet_length	print_relevant_plot.py	/^snippet_length = 500$/;"	v
snippet_length	wave.py	/^snippet_length = 1600$/;"	v
sound_data	print_relevant_plot.py	/^sound_data = list(sound_tup[1])$/;"	v
sound_data	wave.py	/^sound_data = list(sound_tup[1])$/;"	v
sound_data_snippet	print_relevant_plot.py	/^    sound_data_snippet = sound_data[i:i+snippet_length]$/;"	v
sound_data_snippet	wave.py	/^    sound_data_snippet = sound_data[i:i+snippet_length]$/;"	v
sound_tup	print_relevant_plot.py	/^sound_tup = scipy.io.wavfile.read('\/mnt\/hgfs\/vmware_share\/Unacuna Cry Analyzer Tests\/short rohan 16 bit 8000.wav', 'r')$/;"	v
sound_tup	wave.py	/^sound_tup = scipy.io.wavfile.read('\/mnt\/hgfs\/vmware_share\/Unacuna Cry Analyzer Tests\/short rohan.wav', 'r')$/;"	v
sum_of_filter	print_relevant_plot.py	/^        sum_of_filter = sum_of_filter + np.abs(number)$/;"	v
sum_of_filter	print_relevant_plot.py	/^    sum_of_filter = 0$/;"	v
t	butterworth.py	/^    t = np.linspace(0, T, nsamples, endpoint=False)$/;"	v
t	chebyshev.py	/^    t = np.linspace(0, T, nsamples, endpoint=False)$/;"	v
thefile	print_relevant_plot.py	/^thefile = open('test.txt', 'w')$/;"	v
tic	real_time_plotting.py	/^tic = time.time()$/;"	v
times_of_interest	print_relevant_plot.py	/^times_of_interest = rohan_times_of_interest$/;"	v
used	FIR_test.c	/^  size_t used;$/;"	m	struct:__anon2	file:
wf	plot_data.py	/^wf = np.linspace(0, nyquist_freq, num_samples\/2)$/;"	v
wf	print_relevant_plot.py	/^    wf = np.linspace(0, nyquist_freq, num_samples\/2)$/;"	v
wf	wave.py	/^    wf = np.linspace(0, nyquist_freq, num_samples\/2)$/;"	v
x	butterworth.py	/^    x = 0.1 * np.sin(2 * np.pi * 1.2 * np.sqrt(t))$/;"	v
x	chebyshev.py	/^    x = 0.1 * np.sin(2 * np.pi * 1.2 * np.sqrt(t))$/;"	v
x	real_time_plotting.py	/^x = 1$/;"	v
y	butterworth.py	/^    y = butter_bandpass_filter(x, lowcut, highcut, fs, order=1)$/;"	v
y	chebyshev.py	/^    y = butter_bandpass_filter(x, lowcut, highcut, fs, order=6)$/;"	v
y	real_time_plotting.py	/^y = 1$/;"	v
y	simple_real_time_plotting.py	/^    y = np.random.random()$/;"	v
